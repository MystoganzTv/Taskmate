{"ast":null,"code":"import _objectSpread from\"/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AddTask=function AddTask(_ref){var tasklist=_ref.tasklist,setTasklist=_ref.setTasklist,task=_ref.task,setTask=_ref.setTask;var handleSubmit=function handleSubmit(e){e.preventDefault();// Verificar si la tarea tiene un ID para determinar si se debe editar o agregar una nueva tarea\nif(task.id){var date=new Date();// Actualizar la lista de tareas con la tarea editada\nvar updatedTasklist=tasklist.map(function(todo){return(// Verificar si el ID de la tarea coincide con la tarea actual que se está editando\ntodo.id===task.id?{id:task.id,name:task.name,time:\"\".concat(date.toLocaleTimeString(),\"  \").concat(date.toLocaleDateString())}:todo);});setTasklist(updatedTasklist);// Limpiar la tarea actual después de la edición\nsetTask({});}else{var _date=new Date();// Crear una nueva tarea con un ID único basado en la marca de tiempo\nvar newTask={id:_date.getTime(),name:e.target.task.value,time:\"\".concat(_date.toLocaleTimeString(),\" \").concat(_date.toLocaleDateString())};// Agregar la nueva tarea a la lista de tareas\nsetTasklist([].concat(_toConsumableArray(tasklist),[newTask]));// Limpiar la tarea actual después de agregar una nueva tarea\nsetTask({});}// Limpiar el campo de entrada de tarea\nsetTask({name:\"\"});};return/*#__PURE__*/_jsx(\"section\",{className:\"addTask\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"task\",value:task.name||\"\",autoComplete:\"off\",placeholder:\"add task\",maxLength:25,onChange:function onChange(e){return setTask(_objectSpread(_objectSpread({},task),{},{name:e.target.value}));}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:task.id?\"Update\":\"Add\"})]})});};","map":{"version":3,"names":["AddTask","_ref","tasklist","setTasklist","task","setTask","handleSubmit","e","preventDefault","id","date","Date","updatedTasklist","map","todo","name","time","concat","toLocaleTimeString","toLocaleDateString","newTask","getTime","target","value","_toConsumableArray","_jsx","className","children","_jsxs","onSubmit","type","autoComplete","placeholder","maxLength","onChange","_objectSpread"],"sources":["/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/src/components/AddTask.js"],"sourcesContent":["export const AddTask = ({ tasklist, setTasklist, task, setTask }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Verificar si la tarea tiene un ID para determinar si se debe editar o agregar una nueva tarea\n    if (task.id) {\n      const date = new Date();\n      // Actualizar la lista de tareas con la tarea editada\n      const updatedTasklist = tasklist.map((todo) =>\n        // Verificar si el ID de la tarea coincide con la tarea actual que se está editando\n        todo.id === task.id\n          ? {\n              id: task.id,\n              name: task.name,\n              time: `${date.toLocaleTimeString()}  ${date.toLocaleDateString()}`,\n            }\n          : todo\n      );\n      setTasklist(updatedTasklist);\n      // Limpiar la tarea actual después de la edición\n      setTask({});\n    } else {\n      const date = new Date();\n      // Crear una nueva tarea con un ID único basado en la marca de tiempo\n      const newTask = {\n        id: date.getTime(),\n        name: e.target.task.value,\n        time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`,\n      };\n      // Agregar la nueva tarea a la lista de tareas\n      setTasklist([...tasklist, newTask]);\n      // Limpiar la tarea actual después de agregar una nueva tarea\n      setTask({});\n    }\n    // Limpiar el campo de entrada de tarea\n    setTask({ name: \"\" });\n  };\n\n  return (\n    <section className=\"addTask\">\n      <form onSubmit={handleSubmit}>\n        {/* Campo de entrada de texto para la tarea */}\n        <input\n          type=\"text\"\n          name=\"task\"\n          value={task.name || \"\"}\n          autoComplete=\"off\"\n          placeholder=\"add task\"\n          maxLength={25}\n          onChange={(e) => setTask({ ...task, name: e.target.value })}\n        />\n        {/* Botón para agregar o editar una tarea */}\n        <button type=\"submit\">{task.id ? \"Update\" : \"Add\"}</button>\n      </form>\n    </section>\n  );\n};\n"],"mappings":"yhBAAA,MAAO,IAAM,CAAAA,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAAC,IAAA,CAAiD,IAA3C,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,WAAW,CAAAF,IAAA,CAAXE,WAAW,CAAEC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAAEC,OAAO,CAAAJ,IAAA,CAAPI,OAAO,CAC5D,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB;AACA,GAAIJ,IAAI,CAACK,EAAE,CAAE,CACX,GAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvB;AACA,GAAM,CAAAC,eAAe,CAAGV,QAAQ,CAACW,GAAG,CAAC,SAACC,IAAI,QACxC;AACAA,IAAI,CAACL,EAAE,GAAKL,IAAI,CAACK,EAAE,CACf,CACEA,EAAE,CAAEL,IAAI,CAACK,EAAE,CACXM,IAAI,CAAEX,IAAI,CAACW,IAAI,CACfC,IAAI,IAAAC,MAAA,CAAKP,IAAI,CAACQ,kBAAkB,CAAC,CAAC,OAAAD,MAAA,CAAKP,IAAI,CAACS,kBAAkB,CAAC,CAAC,CAClE,CAAC,CACDL,IAAI,GACV,CAAC,CACDX,WAAW,CAACS,eAAe,CAAC,CAC5B;AACAP,OAAO,CAAC,CAAC,CAAC,CAAC,CACb,CAAC,IAAM,CACL,GAAM,CAAAK,KAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvB;AACA,GAAM,CAAAS,OAAO,CAAG,CACdX,EAAE,CAAEC,KAAI,CAACW,OAAO,CAAC,CAAC,CAClBN,IAAI,CAAER,CAAC,CAACe,MAAM,CAAClB,IAAI,CAACmB,KAAK,CACzBP,IAAI,IAAAC,MAAA,CAAKP,KAAI,CAACQ,kBAAkB,CAAC,CAAC,MAAAD,MAAA,CAAIP,KAAI,CAACS,kBAAkB,CAAC,CAAC,CACjE,CAAC,CACD;AACAhB,WAAW,IAAAc,MAAA,CAAAO,kBAAA,CAAKtB,QAAQ,GAAEkB,OAAO,EAAC,CAAC,CACnC;AACAf,OAAO,CAAC,CAAC,CAAC,CAAC,CACb,CACA;AACAA,OAAO,CAAC,CAAEU,IAAI,CAAE,EAAG,CAAC,CAAC,CACvB,CAAC,CAED,mBACEU,IAAA,YAASC,SAAS,CAAC,SAAS,CAAAC,QAAA,cAC1BC,KAAA,SAAMC,QAAQ,CAAEvB,YAAa,CAAAqB,QAAA,eAE3BF,IAAA,UACEK,IAAI,CAAC,MAAM,CACXf,IAAI,CAAC,MAAM,CACXQ,KAAK,CAAEnB,IAAI,CAACW,IAAI,EAAI,EAAG,CACvBgB,YAAY,CAAC,KAAK,CAClBC,WAAW,CAAC,UAAU,CACtBC,SAAS,CAAE,EAAG,CACdC,QAAQ,CAAE,SAAAA,SAAC3B,CAAC,QAAK,CAAAF,OAAO,CAAA8B,aAAA,CAAAA,aAAA,IAAM/B,IAAI,MAAEW,IAAI,CAAER,CAAC,CAACe,MAAM,CAACC,KAAK,EAAE,CAAC,EAAC,CAC7D,CAAC,cAEFE,IAAA,WAAQK,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAEvB,IAAI,CAACK,EAAE,CAAG,QAAQ,CAAG,KAAK,CAAS,CAAC,EACvD,CAAC,CACA,CAAC,CAEd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}