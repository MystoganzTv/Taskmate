{"ast":null,"code":"var _jsxFileName = \"/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/src/components/AddTask.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = _ref => {\n  let {\n    tasklist,\n    setTasklist,\n    task,\n    setTask\n  } = _ref;\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Verificar si la tarea tiene un ID para determinar si se debe editar o agregar una nueva tarea\n    if (task.id) {\n      const date = new Date();\n      // Actualizar la lista de tareas con la tarea editada\n      const updatedTasklist = tasklist.map(todo =>\n      // Verificar si el ID de la tarea coincide con la tarea actual que se está editando\n      todo.id === task.id ? {\n        id: task.id,\n        name: task.name,\n        time: `${date.toLocaleTimeString()}  ${date.toLocaleDateString()}`\n      } : todo);\n      setTasklist(updatedTasklist);\n      // Limpiar la tarea actual después de la edición\n      setTask({});\n    } else {\n      const date = new Date();\n      // Crear una nueva tarea con un ID único basado en la marca de tiempo\n      const newTask = {\n        id: date.getTime(),\n        name: e.target.task.value,\n        time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`\n      };\n      // Agregar la nueva tarea a la lista de tareas\n      setTasklist([...tasklist, newTask]);\n      // Limpiar la tarea actual después de agregar una nueva tarea\n      setTask({});\n    }\n    // Limpiar el campo de entrada de tarea\n    setTask({\n      name: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"addTask\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"task\",\n        value: task.name || \"\",\n        autoComplete: \"off\",\n        placeholder: \"add task\",\n        maxLength: 25,\n        onChange: e => setTask({\n          ...task,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: task.id ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["AddTask","_ref","tasklist","setTasklist","task","setTask","handleSubmit","e","preventDefault","id","date","Date","updatedTasklist","map","todo","name","time","toLocaleTimeString","toLocaleDateString","newTask","getTime","target","value","_jsxDEV","className","children","onSubmit","type","autoComplete","placeholder","maxLength","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/src/components/AddTask.js"],"sourcesContent":["export const AddTask = ({ tasklist, setTasklist, task, setTask }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Verificar si la tarea tiene un ID para determinar si se debe editar o agregar una nueva tarea\n    if (task.id) {\n      const date = new Date();\n      // Actualizar la lista de tareas con la tarea editada\n      const updatedTasklist = tasklist.map((todo) =>\n        // Verificar si el ID de la tarea coincide con la tarea actual que se está editando\n        (todo.id === task.id\n          ? {\n              id: task.id,\n              name: task.name,\n              time: `${date.toLocaleTimeString()}  ${date.toLocaleDateString()}`,\n            }\n          : todo\n      ));\n      setTasklist(updatedTasklist);\n      // Limpiar la tarea actual después de la edición\n      setTask({});\n    } else {\n      const date = new Date();\n      // Crear una nueva tarea con un ID único basado en la marca de tiempo\n      const newTask = {\n        id: date.getTime(),\n        name: e.target.task.value,\n        time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`,\n      };\n      // Agregar la nueva tarea a la lista de tareas\n      setTasklist([...tasklist, newTask]);\n      // Limpiar la tarea actual después de agregar una nueva tarea\n      setTask({});\n    }\n    // Limpiar el campo de entrada de tarea\n    setTask({ name: \"\" });\n  };\n\n  return (\n    <section className=\"addTask\">\n      <form onSubmit={handleSubmit}>\n        {/* Campo de entrada de texto para la tarea */}\n        <input\n          type=\"text\"\n          name=\"task\"\n          value={task.name || \"\"}\n          autoComplete=\"off\"\n          placeholder=\"add task\"\n          maxLength={25}\n          onChange={(e) => setTask({ ...task, name: e.target.value })}\n        />\n        {/* Botón para agregar o editar una tarea */}\n        <button type=\"submit\">{task.id ? \"Update\" : \"Add\"}</button>\n      </form>\n    </section>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,OAAO,GAAGC,IAAA,IAA8C;EAAA,IAA7C;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAC9D,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIJ,IAAI,CAACK,EAAE,EAAE;MACX,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACvB;MACA,MAAMC,eAAe,GAAGV,QAAQ,CAACW,GAAG,CAAEC,IAAI;MACxC;MACCA,IAAI,CAACL,EAAE,KAAKL,IAAI,CAACK,EAAE,GAChB;QACEA,EAAE,EAAEL,IAAI,CAACK,EAAE;QACXM,IAAI,EAAEX,IAAI,CAACW,IAAI;QACfC,IAAI,EAAG,GAAEN,IAAI,CAACO,kBAAkB,CAAC,CAAE,KAAIP,IAAI,CAACQ,kBAAkB,CAAC,CAAE;MACnE,CAAC,GACDJ,IACL,CAAC;MACFX,WAAW,CAACS,eAAe,CAAC;MAC5B;MACAP,OAAO,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACL,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACvB;MACA,MAAMQ,OAAO,GAAG;QACdV,EAAE,EAAEC,IAAI,CAACU,OAAO,CAAC,CAAC;QAClBL,IAAI,EAAER,CAAC,CAACc,MAAM,CAACjB,IAAI,CAACkB,KAAK;QACzBN,IAAI,EAAG,GAAEN,IAAI,CAACO,kBAAkB,CAAC,CAAE,IAAGP,IAAI,CAACQ,kBAAkB,CAAC,CAAE;MAClE,CAAC;MACD;MACAf,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEiB,OAAO,CAAC,CAAC;MACnC;MACAd,OAAO,CAAC,CAAC,CAAC,CAAC;IACb;IACA;IACAA,OAAO,CAAC;MAAEU,IAAI,EAAE;IAAG,CAAC,CAAC;EACvB,CAAC;EAED,oBACEQ,OAAA;IAASC,SAAS,EAAC,SAAS;IAAAC,QAAA,eAC1BF,OAAA;MAAMG,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBAE3BF,OAAA;QACEI,IAAI,EAAC,MAAM;QACXZ,IAAI,EAAC,MAAM;QACXO,KAAK,EAAElB,IAAI,CAACW,IAAI,IAAI,EAAG;QACvBa,YAAY,EAAC,KAAK;QAClBC,WAAW,EAAC,UAAU;QACtBC,SAAS,EAAE,EAAG;QACdC,QAAQ,EAAGxB,CAAC,IAAKF,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEW,IAAI,EAAER,CAAC,CAACc,MAAM,CAACC;QAAM,CAAC;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eAEFZ,OAAA;QAAQI,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAErB,IAAI,CAACK,EAAE,GAAG,QAAQ,GAAG;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACC,EAAA,GAxDWpC,OAAO;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}