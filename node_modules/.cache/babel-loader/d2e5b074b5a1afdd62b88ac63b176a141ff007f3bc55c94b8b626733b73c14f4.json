{"ast":null,"code":"var _jsxFileName = \"/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/src/components/AddTask.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = _ref => {\n  let {\n    tasklist,\n    setTasklist,\n    task,\n    setTask\n  } = _ref;\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    //if task.id update/edit it else add a new task.\n    if (task.id) {\n      const date = new Date();\n      const updateTask = tasklist.map(todo =>\n      //todo is the selected item from tasklist, task.id is the item which we call for edit it.\n      todo.id === task.id ? {\n        id: task.id,\n        name: e.target.task.value,\n        time: `${date.toLocaleTimeString()}  ${date.toLocaleDateString()}`\n      } : todo);\n    } else {\n      const date = new Date();\n      const newTask = {\n        id: date.getTime(),\n        name: e.target.task.value,\n        time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`\n      };\n      setTasklist([...tasklist, newTask]);\n      e.target.task.value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"addTask\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"task\",\n        value: task.name,\n        autoComplete: \"off\",\n        placeholder: \"add task\",\n        maxLength: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["AddTask","_ref","tasklist","setTasklist","task","setTask","handleSubmit","e","preventDefault","id","date","Date","updateTask","map","todo","name","target","value","time","toLocaleTimeString","toLocaleDateString","newTask","getTime","_jsxDEV","className","children","onSubmit","type","autoComplete","placeholder","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/enriquepadronspangberg/Documents/School/Visual Studio 2023/Projects for Study/Learning curve/Udemy/React JS MasterClass/taskmate/src/components/AddTask.js"],"sourcesContent":["export const AddTask = ({ tasklist, setTasklist, task, setTask }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //if task.id update/edit it else add a new task.\n    if (task.id) {\n      const date = new Date();\n      const updateTask = tasklist.map(\n        (todo) =>\n          //todo is the selected item from tasklist, task.id is the item which we call for edit it.\n          todo.id === task.id ? {id: task.id, name: e.target.task.value, time: `${date.toLocaleTimeString()}  ${date.toLocaleDateString()}`}: todo\n      );\n    } else {\n      const date = new Date();\n      const newTask = {\n        id: date.getTime(),\n        name: e.target.task.value,\n        time: `${date.toLocaleTimeString()} ${date.toLocaleDateString()}`\n      };\n      setTasklist([...tasklist, newTask]);\n      e.target.task.value = \"\";\n    }\n  };\n  return (\n    <section className=\"addTask\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"task\"\n          value={task.name}\n          autoComplete=\"off\"\n          placeholder=\"add task\"\n          maxLength={25}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </section>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,OAAO,GAAGC,IAAA,IAA8C;EAAA,IAA7C;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAC9D,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIJ,IAAI,CAACK,EAAE,EAAE;MACX,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACvB,MAAMC,UAAU,GAAGV,QAAQ,CAACW,GAAG,CAC5BC,IAAI;MACH;MACAA,IAAI,CAACL,EAAE,KAAKL,IAAI,CAACK,EAAE,GAAG;QAACA,EAAE,EAAEL,IAAI,CAACK,EAAE;QAAEM,IAAI,EAAER,CAAC,CAACS,MAAM,CAACZ,IAAI,CAACa,KAAK;QAAEC,IAAI,EAAG,GAAER,IAAI,CAACS,kBAAkB,CAAC,CAAE,KAAIT,IAAI,CAACU,kBAAkB,CAAC,CAAE;MAAC,CAAC,GAAEN,IACxI,CAAC;IACH,CAAC,MAAM;MACL,MAAMJ,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACvB,MAAMU,OAAO,GAAG;QACdZ,EAAE,EAAEC,IAAI,CAACY,OAAO,CAAC,CAAC;QAClBP,IAAI,EAAER,CAAC,CAACS,MAAM,CAACZ,IAAI,CAACa,KAAK;QACzBC,IAAI,EAAG,GAAER,IAAI,CAACS,kBAAkB,CAAC,CAAE,IAAGT,IAAI,CAACU,kBAAkB,CAAC,CAAE;MAClE,CAAC;MACDjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEmB,OAAO,CAAC,CAAC;MACnCd,CAAC,CAACS,MAAM,CAACZ,IAAI,CAACa,KAAK,GAAG,EAAE;IAC1B;EACF,CAAC;EACD,oBACEM,OAAA;IAASC,SAAS,EAAC,SAAS;IAAAC,QAAA,eAC1BF,OAAA;MAAMG,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBAC3BF,OAAA;QACEI,IAAI,EAAC,MAAM;QACXZ,IAAI,EAAC,MAAM;QACXE,KAAK,EAAEb,IAAI,CAACW,IAAK;QACjBa,YAAY,EAAC,KAAK;QAClBC,WAAW,EAAC,UAAU;QACtBC,SAAS,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFX,OAAA;QAAQI,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACC,EAAA,GAtCWnC,OAAO;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}